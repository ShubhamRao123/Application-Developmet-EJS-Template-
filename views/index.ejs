<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Chart.js Layout with API Data and Grid</title>
    <style>
      body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f0f2f5;
        color: #333;
      }

      /* Navbar Styling */
      .navbar {
        height: 56px;
        background-color: #004080;
        color: white;
        display: flex;
        align-items: center;
        padding: 0 20px;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 1000;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }
      .navbar h2 {
        margin: 0;
        font-size: 1.5rem;
      }

      /* Sidebar Styling */
      .sidebar {
        width: 15%;
        background-color: #2c3e50;
        color: white;
        padding: 10px 0;
        position: fixed;
        top: 56px;
        bottom: 0;
        overflow-y: auto;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
      }
      .sidebar h3 {
        padding-left: 20px;
        margin-bottom: 20px;
        font-size: 1.2rem;
      }
      .sidebar ul {
        list-style: none;
        padding-left: 0;
      }
      .sidebar ul li {
        padding: 15px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
      }
      .sidebar ul li:hover {
        background-color: #34495e;
      }

      /* Main Content Styling */
      .main-content {
        margin-left: 18%;
        margin-top: 56px;
        padding: 20px;
        height: calc(100vh - 56px);
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        gap: 20px;
      }

      /* Chart Container Styling */
      .chart-container {
        padding: 20px;
        border-radius: 10px;
        background-color: white;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
      }
      .chart-container h3 {
        text-align: center;
        margin-bottom: 10px;
        font-size: 1.2rem;
        color: #004080;
      }

      /* Grid Styling */
      .grid-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 20px;
        margin-top: 20px;
      }
      .grid-item {
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
        text-align: center;
      }
      .grid-item:hover {
        transform: translateY(-5px);
      }
      .grid-item h4 {
        font-size: 1.1rem;
        color: #004080;
      }
      .grid-item p {
        font-size: 0.9rem;
        color: #666;
      }

      /* Avatar Styling */
      .grid-item img {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin-top: 10px;
      }

      /* Scrollbar Styling */
      ::-webkit-scrollbar {
        width: 8px;
      }
      ::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
      }
      ::-webkit-scrollbar-thumb:hover {
        background-color: #555;
      }

      /* Responsive Adjustments */
      @media (max-width: 768px) {
        .sidebar {
          width: 40%;
        }
        .main-content {
          margin-left: 42%;
        }
      }
      @media (max-width: 480px) {
        .sidebar {
          width: 60%;
        }
        .main-content {
          margin-left: 62%;
        }
        .chart-container {
          padding: 15px;
        }
        .grid-container {
          grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        }
      }
    </style>
  </head>
  <body>
    <!-- Top Navbar -->
    <div class="navbar">
      <h2>Header Section</h2>
    </div>

    <!-- Left Sidebar -->
    <div class="sidebar">
      <h3>Sidebar Navigation</h3>
      <ul>
        <li>Home</li>
        <li>About</li>
        <li>Profile</li>
      </ul>
    </div>

    <!-- Main Content Area -->
    <div class="main-content">
      <!-- Row of Charts -->
      <div class="chart-container">
        <h3>Chart 1</h3>
        <canvas id="myChart1"></canvas>
      </div>
      <div class="chart-container">
        <h3>Chart 2</h3>
        <canvas id="myChart2"></canvas>
      </div>

      <!-- Grid Layout for API Data -->
      <div class="grid-container" id="userGrid">
        <!-- API data will be injected here -->
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      async function fetchChartData(apiUrl) {
        try {
          const response = await fetch(apiUrl);
          const data = await response.json();
          return data;
        } catch (error) {
          console.error('Error fetching data:', error);
        }
      }

      function processUserData(users) {
        const labels = users.map(user => `${user.first_name} ${user.last_name}`);
        const values = users.map(user => user.id);
        return { labels, values };
      }

      fetchChartData('https://reqres.in/api/users').then(data => {
        const users = data.data;
        const { labels, values } = processUserData(users);

        const ctx1 = document.getElementById('myChart1').getContext('2d');
        const myChart1 = new Chart(ctx1, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: 'User IDs',
              data: values,
              backgroundColor: 'rgba(54, 162, 235, 0.2)',
              borderColor: 'rgba(54, 162, 235, 1)',
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
      });

      fetchChartData('https://reqres.in/api/users').then(data => {
        const users = data.data;
        const { labels, values } = processUserData(users);

        const ctx2 = document.getElementById('myChart2').getContext('2d');
        const myChart2 = new Chart(ctx2, {
          type: 'bar',
          data: {
            labels: labels,
            datasets: [{
              label: 'User IDs',
              data: values,
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              borderColor: 'rgba(75, 192, 192, 1)',
              borderWidth: 1
            }]
          },
          options: {
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
      });

      fetchChartData('https://reqres.in/api/users').then(data => {
        const users = data.data;
        const gridContainer = document.getElementById('userGrid');

        users.forEach(user => {
          const userItem = document.createElement('div');
          userItem.classList.add('grid-item');
          userItem.innerHTML = `
            <h4>${user.first_name} ${user.last_name}</h4>
            <p>Email: ${user.email}</p>
            <p>ID: ${user.id}</p>
            <img src="${user.avatar}" alt="Avatar of ${user.first_name}">
          `;
          gridContainer.appendChild(userItem);
        });
      });
    </script>
  </body>
</html>
